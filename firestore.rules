rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return request.auth != null && request.auth.token.admin == true;
    }

    // DEV: players are open until Auth is added.
    match /players/{playerId} {
      allow read, write: if true;
    }

    match /tables/{tableId} {
      // Players may read only active tables.
      allow read: if resource.data.active == true;

      // Admin keeps create & destructive updates
      allow create, delete: if isAdmin();

      // Allow players (anon auth) to update ONLY activeSeatCount
      allow update: if (request.auth != null &&
        request.resource.data.diff(resource.data).changedKeys().hasOnly(['activeSeatCount']))
        || isAdmin();

      match /seats/{seatId} {
        allow read: if true;

        // Allow players (anon auth) to claim/leave seats with limited fields only
        allow create, update: if request.auth != null &&
          request.resource.data.diff(resource.data).changedKeys().subsetOf([
            'seatIndex','seatNum','occupiedBy','playerId','playerName','displayName',
            'sittingOut','stackCents','chipStackCents','updatedAt','active'
          ]) &&
          (!resource.exists || request.resource.data.seatIndex == resource.data.seatIndex);
        // No deletes by players
        allow delete: if false;
      }
    }

    // Hands are server-managed only.
    match /tables/{tableId}/hands/{handId} {
      allow read: if true;
      allow write: if false;
    }

    match /tables/{tableId}/hands/{handId}/intents/{intentId} {
      allow read: if true;
      allow create: if request.resource.data.keys().hasOnly(
            ['playerId', 'type', 'amountCents', 'createdAt']) &&
          request.resource.data.playerId is string &&
          request.resource.data.type in ['fold', 'check', 'call', 'raise'] &&
          (request.resource.data.amountCents == null ||
            request.resource.data.amountCents is number);
      allow update, delete: if false;
    }
  }
}
